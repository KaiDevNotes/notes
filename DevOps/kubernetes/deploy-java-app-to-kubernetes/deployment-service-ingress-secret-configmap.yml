---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ app name }}-config
  namespace: {{ namespace }}
data:
  config-1.txt: |
    {{ file content here }}
  config-2.txt: |
    {{ file content here }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ app name }}-db-secret
  namespace: {{ namespace }}
  labels:
    app: {{ app name }}-db-secret
data:
  db: {{ db name encoded into Base64 }}
  user: {{ username encoded into Base64 }}
  password: {{ password encoded into Base64 }}
  port: {{ port encoded into Base64 }}
  host: {{ db host name encoded into Base64 }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: "{{ app name }}"
  name: "{{ app name }}"
  namespace: "{{ namespace }}"
spec:
  rules:
  - host: "{{ fqdn or ip }}"
    http:
      paths:
      - path: /
        backend:
          serviceName: "{{ app name }}"
          servicePort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: "{{ app name }}"
  name: "{{ app name }}"
  namespace: "{{ namespace }}"
spec:
  clusterIP: None
  ports:
    - port: 8080
      name: http
  selector:
    app: "{{ app name }}"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{ app name }}"
  labels:
    app: "{{ app name }}"
  namespace: "{{ namespace }}"
spec:
  replicas: {{ number of replicas }}
  selector:
    matchLabels:
      app: "{{ app name }}"
  template:
    metadata:
      labels:
        app: "{{ app name }}"
    spec:
      containers:
        - name: "{{ app name }}"
          image: "{{ docker image name }}"
          command:
            - java
            - -XX:CICompilerCount=2
            - -XX:MinRAMPercentage=$(RAM_PERCENTAGE)
            - -XX:MaxRAMPercentage=$(RAM_PERCENTAGE)
            - -Dcom.sun.management.jmxremote
            - -Dcom.sun.management.jmxremote.port=$(JMX_PORT)
            - -Dcom.sun.management.jmxremote.rmi.port=$(JMX_PORT)
            - -Dcom.sun.management.jmxremote.authenticate=false
            - -Dcom.sun.management.jmxremote.ssl=false
            - -Djava.rmi.server.hostname=localhost
            - -Dcom.sun.management.jmxremote.local.only=false
            - -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$(JDWP_PORT)
            - -jar
            - $(APPLICATION_JAR_PATH)
          resources:
            limits:
              cpu: "{{ cpu limit }}"
              memory: "{{ memory limit }}"
          env:
            - name: RAM_PERCENTAGE
              value: "{{ ram percentage }}"
            - name: JMX_PORT
              value: "7199"
            - name: JDWP_PORT
              value: "1414"
            - name: APPLICATION_JAR_PATH
              value: "/opt/app-name/app-name.jar"
            - name: DB_ADDR
              valueFrom:
                secretKeyRef:
                  name: {{ app name }}-db-secret
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ app name }}-db-secret
                  key: port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ app name }}-db-secret
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ app name }}-db-secret
                  key: password
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ app name }}-db-secret
                  key: db
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
          - name: {{ app name }}-config
            mountPath: /opt/app-name/config-1.txt
            subPath: config-1.txt
          - name: {{ app name }}-config
            mountPath: /opt/app-name/config-2.txt
            subPath: config-2.txt
          readinessProbe:
            httpGet:
              path: /manage/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /manage/health
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 5
      volumes:
        - name: {{ app name }}-config
          configMap:
            name: {{ app name }}-config
            defaultMode: 0644
