Смотри презентацию "SOLID и GRASP"
http://www.slideshare.net/devel123/solid-grasp-9816996
-------------------------------------------------------------------------------


SOLID - это 5 принципов проектирования классов в ООП.

(S) Single responsibility principle - говорит о том, что на каждый класс должна быть возложена только одна определенная обязанность.

(O) Open/closed principle - говорит о том, что програмные сущности должны быть открыты для расширения, но закрыты для изменений.
- открыты для расширения: означает, что поведение сущности может быть расширено, путём создания новых подтипов сущностей.
- закрыты для изменения: в результате расширения поведения сущности, не должны вносится изменения в код, которые эти сущности используют.

(L) Liskov substitution principle(L) - принцип подстановки Барбары Лисков, который говорит, что функция, использующая базовый тип, должна иметь возможность использовать подтипы базового типа, не зная об этом.

(I) Interface segregation princilpe - говорит о том, что лучше иметь множество специализированых интерфейсов, чем один универсальный.

(D) Dependency inversion principle - говорит о том, что зависимости в системе должны строиться на основе абстракций. Модули верхнего уровня не должны зависеть от модулей нижнего уровня. И те и те должны зависеть от абстракций. В свою очередь, абстракции не должны зависеть от деталей. Детали должны зависить от абстракций.