

BOOKS:
-------

[B1]: Head first. Java
[B2]: Data Structures and Algorithms. R. Lefore
[B3]: Java 8. Полное руководство.
[B4]: Java. Методы программирования.
[B5]: System Design Interview. Alex Xu. 2nd edition


----------------------------------------------------------------------------------------------







JAVA CORE:
----------


https://jsehelper.blogspot.com.by/2016/01/java-core-1.html 
[NOTES]\Java\Java SE\JSE FAQ\JSE Interview Questions. Part 1.pdf
https://jsehelper.blogspot.com.by/2016/01/java-core-2.html 
[NOTES]\Java\Java SE\JSE FAQ\JSE Interview Questions. Part 2.pdf
https://jsehelper.blogspot.com.by/2016/01/java-core-3.html 
[NOTES]\Java\Java SE\JSE FAQ\JSE Interview Questions. Part 3.pdf
https://jsehelper.blogspot.com.by/2016/12/java-core-4.html 
[NOTES]\Java\Java SE\JSE FAQ\JSE Interview Questions. Part 4.pdf


[Области памяти: стэк и куча. Понятия: локальная переменная и переменная экземпляра.]
[B1]: p. 266-269


[Процесс создания, использования и уничтожения объектов.]
[B1]: p. 270-295


[Обработка исключений.]
[B1]: р. 349-367


[Равенство объектов. Правила для equals() и hashCode()]
[B1]: p. 590-593


[Сериализация. Интерфейс Externalizable.]
[B1]: р. 461-491
[B3]: р. 762 


[Процесс загрузки классов. Иерархия ClassLoader'ов. Создание собственного ClassLoader'а.]
https://habrahabr.ru/post/103830/  
[NOTES]\Java\Java SE\Class loading\Class loading. Theory.pdf
https://habrahabr.ru/post/104229/  
[NOTES]\Java\Java SE\Class loading\Class loading. Custom ClassLoader example.pdf


[Lambda-выражения. Список предопределенных ф-ых интерфейсов.]
[B3]: р. 465 


[Java 8. Новые возможности]
http://winterbe.com/posts/2014/03/16/java-8-tutorial/  
[NOTES]\Java\Java SE\Java 8. Highlights.pdf
http://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/  
[NOTES]\Java\Java SE\Java 8. Streams.pdf
https://habrahabr.ru/post/337350/  
[NOTES]\Java\Java SE\Java 8. Streams. Best Practice.pdf



[Garbage Collection]
https://habrahabr.ru/post/112676/
[NOTES]\Java\Java SE\Garbage Collection. Visualization.pdf
http://javaconceptoftheday.com/types-of-references-in-java-strong-soft-weak-and-phantom/
[NOTES]\Java\Java SE\Garbage Collection. Types Of References.pdf
https://stackoverflow.com/questions/1910194/how-does-java-garbage-collection-work-with-circular-references



[Многопоточность.]
[B1]: р. 519-547, p. 546 - описание взаимной блоктровки (Dead lock)
https://jsehelper.blogspot.com.by/2016/01/multithreading-1.html  
[NOTES]\Java\Java SE\Multithreading\FAQ\FAQ. Part 1.pdf
https://jsehelper.blogspot.com.by/2016/01/multithreading-2.html  
[NOTES]\Java\Java SE\Multithreading\FAQ\FAQ. Part 2.pdf

[NOTES]\Java\Java SE\Multithreading\Notes. Java Concurrency in Practice.txt

[java.util.concurrent]
https://dev.by/lenta/main/pochemu-oni-ne-umeyut-pisat-mnogopotochnye-programmy 
[NOTES]\Java\Java SE\Multithreading\Multithreading. Code design vs. Low level features.pdf
https://tproger.ru/translations/10-java-multithread-practices/  
[NOTES]\Java\Java SE\Multithreading\Multithreading. 10 advices.pdf
https://tproger.ru/translations/java8-concurrency-tutorial-1/  
[NOTES]\Java\Java SE\Multithreading\Concurrency API\Concurrency API. Part 1.pdf
https://tproger.ru/translations/java8-concurrency-tutorial-2/  
[NOTES]\Java\Java SE\Multithreading\Concurrency API\Concurrency API. Part 2.pdf
https://tproger.ru/translations/java8-concurrency-tutorial-3/  
[NOTES]\Java\Java SE\Multithreading\Concurrency API\Concurrency API. Part 3.pdf

https://belief-driven-design.com/looking-at-java-21-virtual-threads-bd181/
[NOTES]\Java\Java SE\Multithreading\virtual-threads-overview.pdf


----------------------------------------------------------------------------------------------







ARCHITECTURE AND DESIGN:
------------------------


[NOTES]\Java\Architecture and Design\Clean Code and Design Principles.txt
[NOTES]\Java\Architecture and Design\Architectural approaches\DDD. Domain-Driven Design.txt
[NOTES]\Java\Architecture and Design\Architectural approaches\Reactivity. Reactive Streams.txt
[NOTES]\Java\Architecture and Design\Architectural approaches\CAP theorem.txt
[NOTES]\Java\Architecture and Design\Architectural approaches\SAGA pattern for distributed transactions.pdf
[NOTES]\Java\Architecture and Design\TDD\Classicist And Mockist TDD Comparison.pdf

https://victorrentea.ro/blog/overengineering-in-onion-hexagonal-architectures/
[NOTES]\Java\Architecture and Design\Architectural approaches\Overengineering in Concentric Architectures.pdf

Scaling from zero to millions of users. (B5 ch. 1)

[NOTES]\Java\Architecture and Design\Architectural approaches\System Design notes.txt


----------------------------------------------------------------------------------------------







DATA STRUCTURES AND ALGORITHMS
---------------------------------


[B2]: Глава 15 р. 666-677


[Collections Framework.]
https://habrahabr.ru/post/162017/  
[NOTES]\Java\Java SE\Collections Framework\FAQ.pdf
https://habrahabr.ru/post/128269/  
[NOTES]\Java\Java SE\Collections Framework\ArrayList.pdf
https://habrahabr.ru/post/127864/  
[NOTES]\Java\Java SE\Collections Framework\LinkedList.pdf
https://habrahabr.ru/post/128017/  
[NOTES]\Java\Java SE\Collections Framework\HashMap.pdf
[NOTES]\Java\Java SE\Collections Framework\Collections Framework.txt

[NOTES]\Java\Data Structures and Algorithms\algorithms.txt


----------------------------------------------------------------------------------------------







SPRING FRAMEWORK
----------------


https://jsehelper.blogspot.com.by/2016/02/spring-framework-1.html  
[NOTES]\Java\Spring Framework\FAQ\FAQ. Part 1.pdf
https://jsehelper.blogspot.com.by/2016/03/spring-framework-2.html  
[NOTES]\Java\Spring Framework\FAQ\FAQ. Part 2.pdf
https://jsehelper.blogspot.com.by/2016/03/spring-framework-3.html  
[NOTES]\Java\Spring Framework\FAQ\FAQ. Part 3.pdf

https://reflectoring.io/spring-bean-lifecycle/
[NOTES]\Java\Spring Framework\spring-bean-lifecycle.pdf

https://www.baeldung.com/spring-inject-prototype-bean-into-singleton


----------------------------------------------------------------------------------------------







JPA, HIBERNATE
--------------


https://jsehelper.blogspot.com.by/2016/03/java-persistence-api-jpa-1.html  
[NOTES]\Java\Persistence\JPA\FAQ\FAQ. Part 1.pdf
https://jsehelper.blogspot.com.by/2016/04/java-persistence-api-jpa-2.html  
[NOTES]\Java\Persistence\JPA\FAQ\FAQ. Part 2.pdf


https://jsehelper.blogspot.com.by/2016/01/object-relational-mapping-orm-hibernate.html  
[NOTES]\Java\Persistence\JPA\Hibernate\FAQ\FAQ. Part 1.pdf
https://jsehelper.blogspot.com.by/2016/03/object-relational-mapping-orm-hibernate.html  
[NOTES]\Java\Persistence\JPA\Hibernate\FAQ\FAQ. Part 2.pdf


http://docs.jboss.org/hibernate/orm/5.2/userguide/html_single/Hibernate_User_Guide.html#entity-inheritance

https://www.baeldung.com/spring-hibernate-n1-problem

https://www.baeldung.com/jpa-entity-graph


[Транзакции. ACID.]
https://ru.wikipedia.org/wiki/ACID


[Transaction isolation levels]
https://www.geeksforgeeks.org/transaction-isolation-levels-dbms/amp/


----------------------------------------------------------------------------------------------







SQL
---

[NOTES]\Java\Persistence\SQL Notes.txt
[NOTES]\Java\Persistence\SQL-query practice.txt
[NOTES]\Java\Persistence\MySQL. Indexes. Best practices.pdf


[B4]: p. 793-812


----------------------------------------------------------------------------------------------






Kafka
-----


[NOTES]\DevOps\kafka\kafka-streams.txt


 


