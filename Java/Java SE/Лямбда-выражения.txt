[Java 8. Полное руководство. Г. Шилдт. 9 издание 2015 год]

--------------------------------------------------------------------


Лямбда-выражения:
-----------------


1) Лямбда-выражение (ЛВ) - анонимный метод, который реализует абстрактый метод функционального интерфейса.


2) Функциональный интерфейс (ФИ) или SAM-тип (Single Abstract Method) - интерфейс, определяющий единственное действие. 
Т.е. ФИ содержит только ОДИН абстрактый метод и определяет целевой тип ЛВ.


3) Целевой тип ЛВ - это тип ФИ, метод которого реализует ЛВ.


4) Связь ЛВ и ФИ через ссылку на ФИ (см. пример стр. 441-442):

4.1 - для связи ЛВ с ФИ, ЛВ присваивается ссылке, кот. имеет тип ФИ, т.е. ЛВ присваевается сслыке на ФИ.

4.2 - для вызова ЛВ, необходимо вызвать метод ФИ, который реализуется ЛВ 

4.3 - возвращаемое значение и аргументы ЛВ должны быть совместимы по типу с возвращаемым значением и аргуметами абстрактного метода ФИЦ

4.4 - при указании аргументов ЛВ их тип указывать не нужно (хотя допустимо), т.к. он автоматически берется из соответствующего аргумента абстрактного метода, который реалезуется ЛВ-ем. 
Т.е. если матод имеет сигнатуру: int func(int i), то ЛВ будет иметь вид: (i) -> ..., даже если в методе указан массив: int func(int[] i), ЛВ будет иметь вид: (i) -> ...


5) Если тело ЛВ содержит несколько строк, то их необходимо заключать в фигурные скобки {...}, т.е. в блок кода (ничем не отличается от тела метода, т.е. от блока кода метода).
Если в качестве тела ЛВ используется блок кода, то необходимо явно указывать оператор return для возврата значения из ЛВ.


6) ЛВ не может быть обобщено, т.е. не может принимать параметр типа. 


7) ФИ может быть обобщен (см. пример стр. 446-447). 
Обобщенный ФИ позволяет ссылаться на любое ЛВ, совместимое с абстрактным методом данного ФИ по типу возвращаемого значения и аргументов.


8) ЛВ можно передавать методу в качестве аргумента метода (см. пример стр. 448-449). 
Т.е. аргумент метода должен иметь тип ФИ совместимого с ЛВ.


9) Вместо объявления собственного ФИ можно воспользоваться одним из предопреденных ФИ из пакета java.util.function 
Смотри таблицу 15.1 стр. 465 и таблицу 19.23 стр. 712-715.
  






