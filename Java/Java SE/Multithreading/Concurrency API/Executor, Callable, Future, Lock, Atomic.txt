Executor (ИСПОЛНИТЕЛЬ) - это альтернатина (из пакета java.util.concurrent) средствам класса Thread в вопросе управления потоками исполнения.
Служит для запуска и управления потоками исполнения.

Различные ИСПОЛНИТЕЛИ реализуют интерфейсы Executor, ExecutorService и тд.
При создании объекта ИСПОЛНИТЕЛЯ указывается число потоков, которые будут выполняться одновременно.
Т.е. если при создании объекта ИСПОЛНИТЕЛЯ было указано, например, два, а метод execute объекта ИСПОЛНИТЕЛЯ был вызван для 4 потоков, то одновременно будут выполняться только 2 потока, а оставшиеся два пота выполнятся по мере освобождения ресурсов ИСПОЛНИТЕЛЯ.

-------------------------

Callable - это поток-задача, возвращающая результат своего исполнения.

Для выполненя потока реализующего интерофейс Callable, его необходимо передать в качестве аргумента матода submit объекта ИСПОЛНИТЕЛЯ (Executor).
Метод submit возвращает экземпляр типа Future, кот. представлет обертку результата выполнения потока Callable.
Для получения значения результате выполнения необходимо вызвать метод get() экземпляра типа Future.

-------------------------

Lock (БЛОКИРОВКА) - это альтернатива (из пакета java.util.concurrent) блокам кода synchronized стандартных средств синхронизации в Java.

-------------------------

Atomic - это атомарная операция, т.е. средство синхронизации для чтения или записи значений переменных некоторых типов. 
Благодаря АТОМАРНЫМ ОПЕРАЦИЯМ исключается возможность одновременной записи в поле (свойство, переменную).

